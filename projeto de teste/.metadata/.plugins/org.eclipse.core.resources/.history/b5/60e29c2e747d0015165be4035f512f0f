import static org.junit.Assert.assertEquals;

import java.io.IOException;
import java.util.InputMismatchException;

import org.junit.Test;

public class trianguloTest {
	triangulo tr = new triangulo();
	@Test(expected=Exception.class)
	public void testAvaliaTriangulo() {
		String result;
		//escaleno: 1
		result = tr.avalia_triangulo(5,4,3);
		assertEquals("escaleno", result);
		//equilatero: 2
		result = tr.avalia_triangulo(1, 1, 1);
		assertEquals("equilatero", result);
		//isosceles: 3
		result = tr.avalia_triangulo(5, 5, 8);
		assertEquals("isosceles", result);
		//invertendo posicoes: 4,5
		result = tr.avalia_triangulo(5, 8, 5);
		assertEquals("isosceles", result);
		result = tr.avalia_triangulo(8, 5, 5);
		assertEquals("isosceles", result);
		//zero em uma posicao e invertendo as posicoes: 6
		result = tr.avalia_triangulo(0, 1, 2);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(1, 0, 2);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(1, 2, 0);
		assertEquals("invalido", result);
		//valor negativo: 7
		result = tr.avalia_triangulo(5, -3, 4);
		assertEquals("invalido", result);
		//soma incorreta e invertendo posicoes: 8, 9, 10, 11, 12, 13
		result = tr.avalia_triangulo(3, 2, 1);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(2, 3, 1);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(2, 1, 3);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(2, 1, 4);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(1, 4, 2);
		assertEquals("invalido", result);
		result = tr.avalia_triangulo(4, 1, 2);
		assertEquals("invalido", result);
		//zero em todas posicoes: 14
		result = tr.avalia_triangulo(0, 0, 0);
		assertEquals("invalido", result);
		//n√£o inteiro: 15 erro de compilacao
		tr.avalia_triangulo(4.3, 5.1, 5.4);
		//assertEquals("invalido", result);
		//menor parametro: 16 erro de compilacao
		//result = tr.avalia_triangulo(2, 3);
		//assertEquals("invalido", result);
	}
	public void testException() {
		String result
	}
}
